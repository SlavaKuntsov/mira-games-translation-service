// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TranslationService.Persistence;

#nullable disable

namespace TranslationService.Persistence.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250630131922_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TranslationService.Persistence.Entities.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("code");

                    b.Property<bool>("IsSelected")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_selected");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_languages");

                    b.HasIndex("Name", "Code")
                        .IsUnique()
                        .HasDatabaseName("ix_languages_name_code");

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("TranslationService.Persistence.Entities.LocalizationKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.HasKey("Id")
                        .HasName("pk_localization_keys");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasDatabaseName("ix_localization_keys_key");

                    b.ToTable("localization_keys", (string)null);
                });

            modelBuilder.Entity("TranslationService.Persistence.Entities.Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid")
                        .HasColumnName("language_id");

                    b.Property<Guid>("LocalizationKeyId")
                        .HasColumnType("uuid")
                        .HasColumnName("localization_key_id");

                    b.Property<string>("Text")
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_translations");

                    b.HasIndex("LanguageId")
                        .HasDatabaseName("ix_translations_language_id");

                    b.HasIndex("LocalizationKeyId", "LanguageId")
                        .IsUnique()
                        .HasDatabaseName("ix_translations_localization_key_id_language_id");

                    b.ToTable("translations", (string)null);
                });

            modelBuilder.Entity("TranslationService.Persistence.Entities.Translation", b =>
                {
                    b.HasOne("TranslationService.Persistence.Entities.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_translations_languages_language_id");

                    b.HasOne("TranslationService.Persistence.Entities.LocalizationKey", "LocalizationKey")
                        .WithMany("Translations")
                        .HasForeignKey("LocalizationKeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_translations_localization_keys_localization_key_id");

                    b.Navigation("Language");

                    b.Navigation("LocalizationKey");
                });

            modelBuilder.Entity("TranslationService.Persistence.Entities.LocalizationKey", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
